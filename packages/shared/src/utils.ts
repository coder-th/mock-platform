import path from "path";
import { Context } from "koa";
export function isObject(target) {
  return target !== null && typeof target === "object";
}
export function processMsg(msg) {
  return isObject(msg) ? JSON.stringify(msg) : msg;
}

export function getCurPkgInfo() {
  const curPkgPath = path.join(process.cwd(), "/package.json");
  // 采用require的原因是，require是同步的，而import是异步的
  const pkg = require(curPkgPath);
  return pkg;
}
export function isArray(target) {
  return Object.prototype.toString.call(target) === "[object Array]";
}
export function getRequestInfo(ctx: Context) {
  const request = ctx.request as unknown as Context & {
    params: Record<string, any>;
    body: Record<string, any>;
  };
  const method = request.method;
  const url = request.url;
  const header = {
    cookie: request.header.cookie,
    host: request.header.host,
  };
  const query = request.query;
  const params = request.params;
  const body = request.body;
  return {
    method,
    url,
    header,
    query,
    params,
    body,
  };
}
export function deepMerge<T = any>(src: any = {}, target: any = {}): T {
  let key: string;
  for (key in target) {
    src[key] = isObject(src[key])
      ? deepMerge(src[key], target[key])
      : (src[key] = target[key]);
  }
  return src;
}
export function couldBeClass(obj, strict = true) {
  if (typeof obj != "function") return false;

  var str = obj.toString();

  // async function or arrow function
  if (obj.prototype === undefined) return false;
  // generator function or malformed definition
  if (obj.prototype.constructor !== obj) return false;
  // ES6 class
  if (str.slice(0, 5) == "class") return true;
  // has own prototype properties
  if (Object.getOwnPropertyNames(obj.prototype).length >= 2) return true;
  // anonymous function
  if (/^function\s+\(|^function\s+anonymous\(/.test(str)) return false;
  // ES5 class without `this` in the body and the name's first character
  // upper-cased.
  if (strict && /^function\s+[A-Z]/.test(str)) return true;
  // has `this` in the body
  if (/\b\(this\b|\bthis[\.\[]\b/.test(str)) {
    // not strict or ES5 class generated by babel
    if (!strict || /classCallCheck\(this/.test(str)) return true;

    return /^function\sdefault_\d+\s*\(/.test(str);
  }

  return false;
}
